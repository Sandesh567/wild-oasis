//Installing styled Components

npm i styled-components

saving to variable that will be a component :
which property need to be styled such as h1
write properties inside template literals

const H1 = styled.h1 `
    font-size:30px;
    font-weight:600;
`;

This is react so we can use that variable as our tag
<H1>whatever we write here will be styled with above properties.</H1>

//Using styled components
const Button = styled.button`
  font-size: 1.4rem;
  padding: 1.2rem 1.6rem;
  font-weight: 500;
  border: none;
  border-radius: 7px;
  background-color: purple;
  color: white;
`;
//Applying the styled components

      <Button>Click me</Button>


//Installing libraries

//styled Components 
npm i styled-components

//react router - v.6
npm i react-router-dom@6

//react icons
npm i react-icons

//using the react icons from heroicons 2
import { HiHomeModern } from "react-icons/hi2";

<StyledNavLink to="/dashboard">
            <HiHomeModern />  <- using the icons by components
            Home
          </StyledNavLink>


//Supabase Theory
Helps in creating a backend easily
automatically creates a database and API so we can easily request and recieve data from server
No back end development needed. Perfect to get up and running qucikly.
Easy User Auth and File storage.

//Creating a new Database

create account

create project 

explore table and create table 

//Creating Tables

cabins column data
guests row data
settings row data


bookings table is created and connected using the ID of cabin and guests.

bookings row insert data

//Connect supabase with local computer

So supabase creates API for all our tables automatically.
It provides us javascript for each data as well as RESTFULAPIs for each data or 
for all rows as a whole we can choose.
For APIs we can choose bash option at the top right.
There is a option of hide key we have to select anon and make it public


The API key will return a null value because of RLS (Row level Security) which means it will
prevent anything when someone tries to perform any operation.

Giving permission :
Auth -> policies -> create new policy -> select all public -> apply policy -> done


conneccting API with react
//installing supabase library
npm i --save @supabase/supabase-js